# nixpacks.toml - Optimized for Laravel Livewire with Filament

# Define core variables
[variables]
IS_LARAVEL = "yes"                     # Explicitly identify as Laravel
NIXPACKS_PHP_ROOT_DIR = "/app/public"  # Set correct web root directory
PORT = "80"                            # Container port
NIXPACKS_PHP_FALLBACK_PATH = ""        # Prevent duplicate location blocks in nginx
NODE_VERSION = "18"                    # Match Node version from package.json dependencies

# PHP Extensions - Optimized for Laravel with Filament and Media Library
[phases.setup]
nixPkgs = [
    '(php.withExtensions (pe: pe.enabled ++ [pe.pdo_mysql pe.mysqli pe.gd pe.exif pe.intl pe.zip pe.curl pe.fileinfo pe.mbstring pe.xml]))',
    'nginx',
    'libmysqlclient',
    'phpPackages.composer',
    'nodejs_18',
    'npm-9_x',
]
aptPkgs = ["curl", "wget", "git", "unzip"]

# Optimize installation process
[phases.install]
cmds = [
    'mkdir -p /var/log/nginx && mkdir -p /var/cache/nginx',
    'composer install --optimize-autoloader --no-dev --no-interaction',
    'npm ci', 
]

# Build assets with production settings
[phases.build]
cmds = [
    "npm run build",
    "php artisan optimize:clear",
    "php artisan config:cache",
    "php artisan route:cache",
    "php artisan view:cache",
    "chmod -R 775 storage bootstrap/cache",
]

# Start command with optimized setup
[start]
cmd = 'node /assets/scripts/prestart.mjs /assets/nginx.template.conf /nginx.conf && (php-fpm -y /assets/php-fpm.conf & nginx -c /nginx.conf)' 
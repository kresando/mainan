[www]
; User dan group untuk worker FPM (sesuaikan jika base image Anda berbeda)
user = www-data
group = www-data

; Listen pada socket TCP port 9000 localhost (cocok dengan Nginx di container yang sama)
listen = 127.0.0.1:9000

; Pengaturan Process Manager (PM) - Anda bisa sesuaikan ini berdasarkan resource server
pm = dynamic
pm.max_children = 20
pm.start_servers = 5
pm.min_spare_servers = 2
pm.max_spare_servers = 10
pm.max_requests = 500 ; Restart worker setelah 500 request (membantu cegah memory leak)

; Enable status page (opsional, bisa diakses dari dalam container di /status)
; pm.status_path = /status

; *** PERBAIKAN LOGGING & ENV ***
; Tangkap output stdout/stderr dari worker PHP ke log utama FPM/Docker
catch_workers_output = yes
decorate_workers_output = no ; Tidak perlu prefix tambahan pada log worker

; Kosongkan access log FPM, Nginx sudah cukup untuk access log web
; Atau arahkan ke stdout jika memang dibutuhkan: access.log = /proc/self/fd/1
access.log =

; Pastikan variabel environment dari Docker/Coolify tidak dihapus
clear_env = no

; Arahkan error log FPM/PHP ke stderr (file descriptor 2) agar Docker/Supervisor menangkapnya
; Ini seharusnya mengatasi error "failed to open error_log" permission denied
php_admin_value[error_log] = /proc/self/fd/2
php_admin_flag[log_errors] = on

; *** PENGATURAN PHP RUNTIME ANDA (SUDAH BAGUS) ***
php_admin_value[memory_limit] = 256M
php_admin_value[upload_max_filesize] = 100M
php_admin_value[post_max_size] = 100M
php_admin_value[max_execution_time] = 60
php_admin_value[max_input_time] = 60

; Optimize opcache for production
php_admin_value[opcache.validate_timestamps] = 0
php_admin_value[opcache.memory_consumption] = 128
php_admin_value[opcache.interned_strings_buffer] = 16
php_admin_value[opcache.max_accelerated_files] = 10000
php_admin_value[opcache.enable_cli] = 0

; Security settings
php_admin_flag[allow_url_fopen] = off
php_admin_flag[expose_php] = off
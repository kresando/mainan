; /docker/supervisord.conf
[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log ; Log supervisor events
pidfile=/var/run/supervisord.pid

[program:php-fpm]
; Use -F (foreground) flag instead of --nodaemonize for modern PHP-FPM
command=/usr/local/sbin/php-fpm -F
autostart=true
autorestart=true
priority=5
stdout_logfile=/dev/stdout ; Redirect stdout to Docker logs
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr ; Redirect stderr to Docker logs
stderr_logfile_maxbytes=0
user=www-data              ; Run FPM process as www-data

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;" ; Run Nginx in foreground
autostart=true
autorestart=true
priority=10
stdout_logfile=/dev/stdout ; Redirect access_log specified in nginx.conf to Docker logs
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr ; Redirect error_log specified in nginx.conf to Docker logs
stderr_logfile_maxbytes=0
; Nginx needs to start as root to bind to port 80, but worker processes run as www-data (defined in nginx.conf usually)

# Laravel Queue Worker (adjust command/options as needed)
[program:laravel-worker]
process_name=%(program_name)s_%(process_num)02d
; Use 'queue:listen' for long-running simple jobs or 'queue:work --daemon' for efficiency
; Adjust --tries, --timeout, --sleep, --queue as necessary
command=php /var/www/html/artisan queue:work --tries=3 --max-time=3600
autostart=true          ; Start worker automatically
autorestart=true        ; Restart worker if it crashes
user=www-data           ; Run worker as www-data
numprocs=2              ; Number of worker processes (adjust based on load/resources)
redirect_stderr=true    ; Send worker stderr to its stdout log
stdout_logfile=/dev/stdout ; Redirect worker output to Docker logs
stdout_logfile_maxbytes=0
stopwaitsecs=3600       ; Max time (seconds) to wait for worker to finish job before SIGKILL